{"version":3,"file":"static/js/97.ffb901ed.chunk.js","mappings":"kPAEaA,EAAcC,EAAAA,EAAAA,GAAH,oWAeXC,EAAkBD,EAAAA,EAAAA,GAAH,sKASfE,EAAuBF,EAAAA,EAAAA,IAAH,gEAKpBG,EAAYH,EAAAA,EAAAA,GAAH,kFAMTI,EAAeJ,EAAAA,EAAAA,GAAH,sF,SCxBlB,SAASK,IACd,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAAII,MAAK,SAAAC,GAAC,OAAIN,EAAUM,EAAEC,KAAhB,GACnB,GAAE,CAACN,IAECF,EAIL,OACE,0BACE,SAACR,EAAD,UACGQ,EAAOS,KAAI,SAAAF,GACV,OACE,UAACb,EAAD,WACGa,EAAEG,eACD,SAACf,EAAD,CACEgB,IAAG,UAtBA,mCAsBA,OAAoBJ,EAAEG,cACzBE,IAAKL,EAAEM,QAGX,SAACjB,EAAD,UAAYW,EAAEM,QACd,UAAChB,EAAD,yBAA0BU,EAAEO,eARRP,EAAEM,KAW3B,OAIR,C","sources":["components/Cast/CastGal.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 72px);\n  grid-template-columns: repeat(auto-fill, minmax(154px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 16px 0;\n  border-top: 1px solid #676297;\n  border-bottom: 1px solid #8f7ca8;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastGalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  border-radius: 10px;\n  padding: 1px;\n`;\n\nexport const CastGalleryItemImage = styled.img`\n  border-radius: 10px;\n  width: 100%;\n`;\n\nexport const CastTitle = styled.h5`\n  margin: 6px;\n  text-align: center;\n  color: #373955;\n`;\n\nexport const GalleryTitle = styled.h2`\n  font-size: 12px;\n  text-align: center;\n  color: #373955;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getCast } from '../../service/servive-api';\nimport { useState, useEffect } from 'react';\nimport {\n  CastGallery,\n  CastGalleryItem,\n  CastGalleryItemImage,\n  CastTitle,\n  GalleryTitle,\n} from './CastGal.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function Cast() {\n  const [actors, setActors] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCast(id).then(e => setActors(e.cast));\n  }, [id]);\n\n  if (!actors) {\n    return;\n  }\n\n  return (\n    <div>\n      <CastGallery>\n        {actors.map(e => {\n          return (\n            <CastGalleryItem key={e.name}>\n              {e.profile_path && (\n                <CastGalleryItemImage\n                  src={`${BASE_IMG_URL}${e.profile_path}`}\n                  alt={e.name}\n                />\n              )}\n              <CastTitle>{e.name}</CastTitle>\n              <GalleryTitle>Character: {e.character}</GalleryTitle>\n            </CastGalleryItem>\n          );\n        })}\n      </CastGallery>\n    </div>\n  );\n}\n"],"names":["CastGallery","styled","CastGalleryItem","CastGalleryItemImage","CastTitle","GalleryTitle","Cast","useState","actors","setActors","id","useParams","useEffect","getCast","then","e","cast","map","profile_path","src","alt","name","character"],"sourceRoot":""}